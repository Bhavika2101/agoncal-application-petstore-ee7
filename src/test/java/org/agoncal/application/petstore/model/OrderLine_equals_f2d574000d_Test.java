// Test generated by RoostGPT for test java-scenario-test using AI Type Open AI and AI Model gpt-4

/*
1. Scenario: Two identical OrderLine objects are compared.
   - Expected result: The equals function should return true.

2. Scenario: Two OrderLine objects with the same quantity and item are compared.
   - Expected result: The equals function should return true.

3. Scenario: Two OrderLine objects with the same quantity but different items are compared.
   - Expected result: The equals function should return false.

4. Scenario: Two OrderLine objects with different quantities but the same item are compared.
   - Expected result: The equals function should return false.

5. Scenario: Two OrderLine objects with different quantities and items are compared.
   - Expected result: The equals function should return false.

6. Scenario: An OrderLine object is compared with null.
   - Expected result: The equals function should return false.

7. Scenario: An OrderLine object is compared with an object of a different class.
   - Expected result: The equals function should return false.

8. Scenario: An OrderLine object is compared with itself.
   - Expected result: The equals function should return true.

9. Scenario: Two OrderLine objects with null quantities are compared.
   - Expected result: The equals function should handle null values and not throw a NullPointerException.

10. Scenario: Two OrderLine objects with null items are compared.
    - Expected result: The equals function should handle null values and not throw a NullPointerException. 

11. Scenario: An OrderLine object with a null quantity is compared with an OrderLine object with a non-null quantity.
    - Expected result: The equals function should return false.

12. Scenario: An OrderLine object with a null item is compared with an OrderLine object with a non-null item.
    - Expected result: The equals function should return false.
*/
package org.agoncal.application.petstore.model;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class OrderLine_equals_f2d574000d_Test {

    private OrderLine orderLine1;
    private OrderLine orderLine2;

    private Item item1;
    private Item item2;

    @Before
    public void setUp() {
        item1 = new Item();
        item1.setId(1L);
        item1.setName("Item 1");
        item1.setUnitCost(10.0F);

        item2 = new Item();
        item2.setId(2L);
        item2.setName("Item 2");
        item2.setUnitCost(20.0F);

        orderLine1 = new OrderLine();
        orderLine1.setQuantity(1);
        orderLine1.setItem(item1);

        orderLine2 = new OrderLine();
        orderLine2.setQuantity(1);
        orderLine2.setItem(item1);
    }

    @Test
    public void testEqualsSameObject() {
        assertTrue(orderLine1.equals(orderLine1));
    }

    @Test
    public void testEqualsDifferentObject() {
        assertFalse(orderLine1.equals(orderLine2));
    }

    @Test
    public void testEqualsSameQuantityDifferentItem() {
        orderLine2.setItem(item2);
        assertFalse(orderLine1.equals(orderLine2));
    }

    @Test
    public void testEqualsDifferentQuantitySameItem() {
        orderLine2.setQuantity(2);
        assertFalse(orderLine1.equals(orderLine2));
    }

    @Test
    public void testEqualsNull() {
        assertFalse(orderLine1.equals(null));
    }

    @Test
    public void testEqualsDifferentClass() {
        assertFalse(orderLine1.equals(new String("test")));
    }
}
