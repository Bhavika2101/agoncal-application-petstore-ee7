// Test generated by RoostGPT for test java-scenario-test using AI Type Open AI and AI Model gpt-4

/*
Test Scenario 1: Both objects are identical
- Description: This scenario validates the case where both objects are identical (i.e., they are the same object).
- Input: The same object instance is passed as the argument to the equals method.
- Expected Output: The equals method should return true.

Test Scenario 2: The object passed as argument is null
- Description: This scenario validates the case where the object passed as argument is null.
- Input: Null is passed as the argument to the equals method.
- Expected Output: The equals method should return false.

Test Scenario 3: The objects are of different classes
- Description: This scenario validates the case where the objects are of different classes.
- Input: An object of a different class is passed as the argument to the equals method.
- Expected Output: The equals method should return false.

Test Scenario 4: The objects are of the same class but have different ISO codes
- Description: This scenario validates the case where the objects are of the same class but have different ISO codes.
- Input: An object of the Country class with a different ISO code is passed as the argument to the equals method.
- Expected Output: The equals method should return false.

Test Scenario 5: The objects are of the same class and have the same ISO codes
- Description: This scenario validates the case where the objects are of the same class and have the same ISO codes.
- Input: An object of the Country class with the same ISO code is passed as the argument to the equals method.
- Expected Output: The equals method should return true.
*/
package org.agoncal.application.petstore.model;

import org.junit.Test;
import static org.junit.Assert.*;

public class Country_equals_f2d574000d_Test {

    @Test
    public void testEquals_IdenticalObjects() {
        Country country1 = new Country("isoCode1", "name1", "printableName1", "iso31", "numcode1");
        assertTrue(country1.equals(country1));
    }

    @Test
    public void testEquals_NullObject() {
        Country country1 = new Country("isoCode1", "name1", "printableName1", "iso31", "numcode1");
        assertFalse(country1.equals(null));
    }

    @Test
    public void testEquals_DifferentClasses() {
        Country country1 = new Country("isoCode1", "name1", "printableName1", "iso31", "numcode1");
        String notACountry = "I am not a country";
        assertFalse(country1.equals(notACountry));
    }

    @Test
    public void testEquals_DifferentIsoCodes() {
        Country country1 = new Country("isoCode1", "name1", "printableName1", "iso31", "numcode1");
        Country country2 = new Country("isoCode2", "name2", "printableName2", "iso32", "numcode2");
        assertFalse(country1.equals(country2));
    }

    @Test
    public void testEquals_SameIsoCodes() {
        Country country1 = new Country("isoCode", "name1", "printableName1", "iso31", "numcode1");
        Country country2 = new Country("isoCode", "name2", "printableName2", "iso32", "numcode2");
        assertTrue(country1.equals(country2));
    }
}
