// Test generated by RoostGPT for test java-scenario-test using AI Type Open AI and AI Model gpt-4

/*
Test Scenario 1:
Title: Checking the equality of two identical objects
Description: In this scenario, we will check the behavior of the equals() function when the same object is passed as an argument.

Test Scenario 2:
Title: Checking the equality of two different objects of the same class
Description: In this scenario, we will check the behavior of the equals() function when another object of the same class but with different name value is passed as an argument.

Test Scenario 3:
Title: Checking the equality with null object
Description: In this scenario, we will check the behavior of the equals() function when null is passed as an argument.

Test Scenario 4:
Title: Checking the equality with an object of different class
Description: In this scenario, we will check the behavior of the equals() function when an object of a different class is passed as an argument.

Test Scenario 5:
Title: Checking the equality of two objects of the same class with the same name value
Description: In this scenario, we will check the behavior of the equals() function when another object of the same class with the same name value is passed as an argument. 

Test Scenario 6:
Title: Checking the equality of two objects when the name field is null
Description: In this scenario, we will check the behavior of the equals() function when the name field of the object is null.
*/
package org.agoncal.application.petstore.model;

import org.junit.Test;
import static org.junit.Assert.*;

public class Category_equals_f2d574000d_Test {

    @Test
    public void testEqualsSameObject() {
        Category category1 = new Category("Test", "Test Description");
        assertTrue(category1.equals(category1));
    }

    @Test
    public void testEqualsDifferentObjectSameValues() {
        Category category1 = new Category("Test", "Test Description");
        Category category2 = new Category("Test", "Test Description");
        assertTrue(category1.equals(category2));
    }

    @Test
    public void testEqualsDifferentObjectDifferentValues() {
        Category category1 = new Category("Test1", "Test Description1");
        Category category2 = new Category("Test2", "Test Description2");
        assertFalse(category1.equals(category2));
    }

    @Test
    public void testEqualsNullObject() {
        Category category1 = new Category("Test", "Test Description");
        assertFalse(category1.equals(null));
    }

    @Test
    public void testEqualsDifferentClassObject() {
        Category category1 = new Category("Test", "Test Description");
        String notACategory = "I'm not a category";
        assertFalse(category1.equals(notACategory));
    }
}
