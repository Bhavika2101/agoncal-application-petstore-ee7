// ********RoostGPT********
/*
Test generated by RoostGPT for test java-rest-assued using AI Type Open AI and AI Model gpt-4

Test generated for /api/customer/restaurantTable/edit_put for http method type PUT in rest-assured framework

RoostTestHash=905dfcdcfd


*/

// ********RoostGPT********
package org.agoncal.application.RoostTest;
import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.Before;
import org.junit.jupiter.api.Test;
import static io.restassured.RestAssured.given;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import org.hamcrest.MatcherAssert;
import static org.hamcrest.Matchers.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class editPutTest {

    List<Map<String, String>> envList = new ArrayList<>();


    @Before
    public void setUp() {
      TestdataLoader dataloader = new TestdataLoader();
      envList = dataloader.loadData("src/test/java/org/agoncal/application/RoostTest/editPutTest.csv");
    }

  
    @Test  
    public void editPut_Test() {
        this.setUp();
        for (Map<String, String> testData : envList) {
          RestAssured.baseURI = "https://virtserver.swaggerhub.com/VOK/Payfix/1.2.14";  
  
                Response response = given()
				.pathParam("company", testData.get("company") != null ? testData.get("company") : "")
				.pathParam("tableId", testData.get("tableId") != null ? testData.get("tableId") : "")
				.pathParam("number", testData.get("number") != null ? testData.get("number") : "")
				.pathParam("name", testData.get("name") != null ? testData.get("name") : "")
                .when()
                .put("/api/customer/restaurantTable/edit")  
                .then() 
                .extract().response();    
         
                if (response.statusCode() == 200) {
					System.out.println("Description: Edit new Restaurant Table");
      
              if (response.jsonPath().get("id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("id"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("external_id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("external_id"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("number") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("number"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("name") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("name"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("restaurant_table_group_id") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("restaurant_table_group_id"), instanceOf(Integer.class));  
          }
      
              if (response.jsonPath().get("updated_at") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("updated_at"), instanceOf(String.class));  
          }
      
              if (response.jsonPath().get("created_at") != null) {  
                MatcherAssert.assertThat(response.jsonPath().get("created_at"), instanceOf(String.class));  
          }
				}
  
            }  
    }
}
